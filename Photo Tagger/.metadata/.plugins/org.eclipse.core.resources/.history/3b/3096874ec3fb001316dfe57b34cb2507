import javax.net.ssl.HttpsURLConnection;
import javax.swing.*;

import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedOutputStream;
import java.io.BufferedReader;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLConnection;
import java.util.ArrayList;
import java.util.Calendar;

import org.apache.commons.imaging.ImageReadException;
import org.apache.commons.imaging.ImageWriteException;
import org.apache.commons.imaging.Imaging;
import org.apache.commons.imaging.common.IImageMetadata;
import org.apache.commons.imaging.common.RationalNumber;
import org.apache.commons.imaging.formats.jpeg.JpegImageMetadata;
import org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.TiffImageMetadata;
import org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants;
import org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants;
import org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory;
import org.apache.commons.imaging.formats.tiff.write.TiffOutputSet;
import org.apache.commons.imaging.util.IoUtils;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.impl.client.HttpClients;
import org.omg.CORBA.NameValuePair;

//Start button panel - starts all other panel
public class PhotoTaggerGUI extends JPanel implements ActionListener{
	
	//Overall GUI
	JFrame guiFrame;
	
	//All the panels used
	Directory directoryPanel;
	UserName userNamePanel;
	DeviceName deviceNamePanel;
	DeltaTime deltaTimePanel;
	TimeDifference timeDifferencePanel;
	
	//Parts of the PhtoTaggerGUI Panel
	JButton startButton;
	JLabel progressLabel;
	JLabel curProgressLabel;
	
	/*
	* main()
	* 
	* parameters: 
	* 	String[] args - default args
	* returns: 
	* 	none
	*
	* beginning of program
	*/
	public static void main(String[] args) {  
		
		//Set up GUI
        new PhotoTaggerGUI();
        
    }

	/*
	* photoTaggerGUI()
	* 
	* parameters: 
	* 	none
	* returns: 
	* 	none
	*
	*constructor - sets up gui for this panel
	*/
	public PhotoTaggerGUI() {
		
		//Start button
		startButton = new JButton("Start");
		//Progress Label
		JLabel progressLabel = new JLabel("Progress:");
		//Current Progress Label
		curProgressLabel = new JLabel("");

		//Set up action listener
		startButton.addActionListener(this);
		
		//Add to panel
		this.add(startButton);
		this.add(progressLabel);
		this.add(curProgressLabel);
		
		//Set up rest of gui
		setUpFrame();
		
	}
	
	/*
	* setUpFrame()
	* 
	* parameters: 
	* 	none
	* returns: 
	* 	none
	*
	* sets up the outer frame
	*/
	public void setUpFrame(){

		//Set up frame
		guiFrame = new JFrame();
		guiFrame.setTitle("Photo Tagger");
		guiFrame.setSize(1200, 200);
		guiFrame.setLocationRelativeTo(null);
		guiFrame.setLayout(new FlowLayout());
		
		//Get all the panels
		directoryPanel = new Directory();
		userNamePanel = new UserName();
		deviceNamePanel = new DeviceName();
		deltaTimePanel = new DeltaTime();
		timeDifferencePanel = new TimeDifference();

		//Set up frame
		guiFrame.add(directoryPanel);
		guiFrame.add(userNamePanel);
		guiFrame.add(deviceNamePanel);
		guiFrame.add(deltaTimePanel);
		guiFrame.add(timeDifferencePanel);
		guiFrame.add(this);
		
		//make sure the JFrame is visible
        guiFrame.setVisible(true);
	}
	    
    /*
	* actionPerformed()
	*
	* parameters: 
	* 	ActionEvent arg0 - default args
	* returns: 
	* 	none
	* 
	* run the program when start button pressed
	*/
	@Override
	public void actionPerformed(ActionEvent e) {

		//Start Processing
		startProcessing();
		
	}
    
	/*
	* startProcessing()
	*
	* parameters: 
	* 	none
	* returns: 
	* 	none
	* 
	* Start the things necessary for processing
	*/
	public void startProcessing() {

		//Get the parameters
		String userName = userNamePanel.getUserName();
		String deviceName = deviceNamePanel.getDeviceName();
		String deltaTime = deltaTimePanel.getDeltaTime();
		String timeDifference = timeDifferencePanel.getTimeDifference();
		String directory = directoryPanel.getDirectory();

		//Check for correctness
		if (userName==""){
			JOptionPane.showMessageDialog(guiFrame, "Need a User Name");
			curProgressLabel.setText("Parameter Error");
			return;
		}
		if (deviceName==""){
			JOptionPane.showMessageDialog(guiFrame, "Need a Device Name");
			curProgressLabel.setText("Parameter Error");
			return;
		}
		if (isInteger(deltaTime)==false){
			JOptionPane.showMessageDialog(guiFrame, "Delta Time needs to be an integer");
			curProgressLabel.setText("Parameter Error");
			return;
		}
		if (isInteger(timeDifference)==false){
			JOptionPane.showMessageDialog(guiFrame, "Time Difference needs to be an integer");
			curProgressLabel.setText("Parameter Error");
			return;
		}
		if (directory==""){
			JOptionPane.showMessageDialog(guiFrame, "Need a Directory");
			curProgressLabel.setText("Parameter Error");
			return;
		}

		//Set the parameters
		PhotoTagger photoTagger = new PhotoTagger();
		photoTagger.setParameters(userName, deviceName, deltaTime, timeDifference);
		
		//Start the processing
		photoTagger.startProcessing(directory);		
		
	}
	
	/*
	* isInteger()
	*
	* parameters: 
	* 	String s - string to check
	* returns: 
	* 	boolean - true if it is
	* 
	* Check if string is an integer
	*/
	public static boolean isInteger(String s) {
		
	    //Try to parse the string
		try { 
	        Integer.parseInt(s); 
	    } catch(NumberFormatException e) { 
	        return false; 
	    }

	    return true;
	    
	}
}


